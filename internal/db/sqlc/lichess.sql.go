// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: lichess.sql

package db

import (
	"context"
)

const getLichessMembers = `-- name: GetLichessMembers :many
SELECT lichess_id from lichess
`

func (q *Queries) GetLichessMembers(ctx context.Context) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getLichessMembers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []string{}
	for rows.Next() {
		var lichess_id string
		if err := rows.Scan(&lichess_id); err != nil {
			return nil, err
		}
		items = append(items, lichess_id)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const insertMember = `-- name: InsertMember :exec
INSERT INTO lichess(lichess_id, username) VALUES ($1, $2)
`

type InsertMemberParams struct {
	LichessID string `json:"lichess_id"`
	Username  string `json:"username"`
}

func (q *Queries) InsertMember(ctx context.Context, arg InsertMemberParams) error {
	_, err := q.db.ExecContext(ctx, insertMember, arg.LichessID, arg.Username)
	return err
}
